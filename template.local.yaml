
specVersion: 0.0.4
description: Tracker of U2U marketplace
repository: https://github.com/rariblecom/subgraph
schema:
  file: ./schema.graphql
dataSources:
  # - kind: ethereum/contract
  #   name: ERC721FactoryLegacy
  #   network: {{network}}
  #   source:
  #     address: '{{erc721LegacyFactory.address}}'
  #     abi: ERC721LegacyFactory
  #     startBlock: {{erc721LegacyFactory.startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     file: ./src/mapping/CollectionLegacy.ts
  #     entities:
  #       - Collection
  #     abis:
  #       - name: ERC721LegacyFactory
  #         file: ./abis/ERC721LegacyFactory.json
  #     eventHandlers:
  #       - event: Create721RaribleUserProxy(address)
  #         handler: handle721UserProxyLegacy
  - kind: ethereum/contract
    name: ERC721Factory
    network: {{network}}
    source:
      address: '{{erc721factory.address}}'
      abi: ERC721Factory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/CollectionState.ts
      entities:
        - Collection
      abis:
        - name: ERC721Factory
          file: ./abis/ERC721Factory.json
      eventHandlers:
        - event: Create721RaribleProxy(address)
          handler: handle721Proxy
        - event: Create721RaribleUserProxy(address)
          handler: handle721UserProxy
  - kind: ethereum/contract
    name: ERC1155Factory
    network: {{network}}
    source:
      address: '{{erc1155factory.address}}'
      abi: ERC1155Factory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/CollectionState.ts
      entities:
        - Collection
      abis:
        - name: ERC1155Factory
          file: ./abis/ERC1155Factory.json
      eventHandlers:
        - event: Create1155RaribleProxy(address)
          handler: handle1155Proxy
        - event: Create1155RaribleUserProxy(address)
          handler: handle1155UserProxy
  - kind: ethereum/contract
    name: ERC721Marketplace
    network: {{network}}
    source:
      address: '{{erc721marketplace.address}}'
      abi: ERC721Marketplace
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/Marketplace721.ts
      entities:
        - MarketEvent721
      abis:
        - name: ERC721Marketplace
          file: ./abis/ERC721Marketplace.json
      eventHandlers:
        - event: AskNew(indexed address,indexed address,uint256,address,uint256)
          handler: handleAskNew
        - event: AskCancel(indexed address,indexed address,uint256)
          handler: handleAskCancel
        - event: Trade(indexed address,indexed address,indexed address,uint256,address,uint256,uint256)
          handler: handleTrade
        - event: AcceptBid(indexed address,indexed address,indexed address,uint256,address,uint256,uint256)
          handler: handleAcceptBid
        - event: Bid(indexed address,indexed address,uint256,address,uint256)
          handler: handleBid
        - event: CancelBid(indexed address,indexed address,uint256)
          handler: handleCancelBid

  - kind: ethereum/contract
    name: ERC1155Marketplace
    network: {{network}}
    source:
      address: '{{erc1155marketplace.address}}'
      abi: ERC1155Marketplace
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/Marketplace1155.ts
      entities:
        - MarketEvent1155
      abis:
        - name: ERC1155Marketplace
          file: ./abis/ERC1155Marketplace.json
      eventHandlers:
        - event: AskNew(uint256,address,address,uint256,uint256,address,uint256)
          handler: handleAskNew
        - event: AskCancel(uint256)
          handler: handleAskCancel
        - event: Buy(uint256,address,uint256,uint256,uint256)
          handler: handleBuy
        - event: OfferAccept(uint256,address,uint256,uint256,uint256)
          handler: handleAcceptOffer
        - event: OfferNew(uint256,address,address,uint256,uint256,address,uint256)
          handler: handleOfferNew
        - event: OfferCancel(uint256)
          handler: handleOfferCancel
  # - kind: ethereum/contract
  #   name: NFT
  #   network: {{network}}
  #   source:
  #     address: '{{erc721Nonfactory.address}}'
  #     abi: NFT
  #     startBlock: {{startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     file: ./src/mapping/NFTnonFactory.ts
  #     entities:
  #       - Item
  #     abis:
  #       - name: NFT
  #         file: ./abis/ERC721Proxy.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,indexed uint256)
  #         handler: handleTransfer

  # - kind: ethereum/contract
  #   name: {{MVTLAND.name}}
  #   network: {{network}}
  #   source:
  #     address: '{{MVTLAND.address}}'
  #     abi: NFT
  #     startBlock: {{MVTLAND.startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     file: ./src/mapping/NFTnonFactory.ts
  #     entities:
  #       - Item
  #     abis:
  #       - name: NFT
  #         file: ./abis/ERC721Proxy.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,indexed uint256)
  #         handler: handleTransfer

  # - kind: ethereum/contract
  #   name: {{MTV-ESTATE.name}}
  #   network: {{network}}
  #   source:
  #     address: '{{MTV-ESTATE.address}}'
  #     abi: NFT
  #     startBlock: {{MTV-ESTATE.startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     file: ./src/mapping/NFTnonFactory.ts
  #     entities:
  #       - Item
  #     abis:
  #       - name: NFT
  #         file: ./abis/ERC721Proxy.json
  #     eventHandlers:
  #       - event: Transfer(indexed address,indexed address,indexed uint256)
  #         handler: handleTransfer

  - kind: ethereum/contract
    name: ERC721Proxy
    network: {{network}}
    source:
      address: '{{erc721Base.address}}'
      abi: ERC721Proxy
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/NFT.ts
      entities:
        - Item
        - Deal
      abis:
        - name: ERC721Proxy
          file: ./abis/ERC721Proxy.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: BaseUriChanged(string)
          handler: handleBaseUriChanged
        - event: CreateERC721Rarible(address,string,string)
          handler: handleCreateERC721Rarible
        - event: CreateERC721RaribleUser(address,string,string)
          handler: handleCreateERC721RaribleUser
        - event: Creators(uint256,(address,uint96)[])
          handler: handle721Creators
        - event: DefaultApproval(indexed address,bool)
          handler: handleDefaultApproval
        - event: MinterStatusChanged(indexed address,indexed bool)
          handler: handleMinterStatusChanged
        - event: RoyaltiesSet(uint256,(address,uint96)[])
          handler: handleRoyaltiesSet
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: ERC1155Proxy
    network: {{network}}
    source: 
      address: '{{erc1155Base.address}}'
      abi: ERC1155Proxy
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/NFT.ts
      entities:
        - Item
        - Deal
      abis:
        - name: ERC1155Proxy
          file: ./abis/ERC1155Proxy.json
      eventHandlers:
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: BaseUriChanged(string)
          handler: handleBaseUriChanged
        - event: CreateERC1155Rarible(address,string,string)
          handler: handleCreateERC1155Rarible
        - event: CreateERC1155RaribleUser(address,string,string)
          handler: handleCreateERC1155RaribleUser
        - event: Creators(uint256,(address,uint96)[])
          handler: handle1155Creators
        - event: DefaultApproval(indexed address,bool)
          handler: handleDefaultApproval
        - event: MinterStatusChanged(indexed address,indexed bool)
          handler: handleMinterStatusChanged
        - event: RoyaltiesSet(uint256,(address,uint96)[])
          handler: handleRoyaltiesSet
        - event: Supply(uint256,uint256)
          handler: handleSupply
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTranferBatch
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: URI(string,indexed uint256)
          handler: handleURI
  - kind: ethereum/contract
    name: RoyaltiesRegistry
    network: {{network}}
    source:
      address: '{{royaltiesRegistry.address}}'
      abi: RoyaltiesRegistry
      startBlock: {{royaltiesRegistry.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/RoyaltiesRegistry.ts
      entities:
        - RoyaltiesRegistry
        - RoyaltyItem
      abis:
        - name: RoyaltiesRegistry
          file: ./abis/RoyaltiesRegistry.json
      eventHandlers:
        - event: RoyaltiesSetForContract(indexed address,(address,uint96)[])
          handler: handleRoyaltiesRegistry
  # - kind: ethereum/contract
  #   name: {{u2unft_odyssean_voyage.name}}
  #   network: {{network}}
  #   source: 
  #     address: '{{u2unft_odyssean_voyage.address}}'
  #     abi: ERC1155Proxy
  #     startBlock: {{startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     file: ./src/mapping/NFTnonFactory.ts
  #     entities:
  #       - Item
  #       - Deal
  #     abis:
  #       - name: ERC1155Proxy
  #         file: ./abis/ERC1155Proxy.json
  #     eventHandlers:
  #       - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
  #         handler: handleTranferBatch
  #       - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
  #         handler: handleTransferSingleNoFactory
templates:
  - kind: ethereum/contract
    name: NFTLegacy
    network: testnet
    source:
      abi: NFTLegacy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/NFTnonFactory.ts
      entities:
        - ERC721Token
      abis:
        - name: NFTLegacy
          file: ./abis/ERC721Legacy.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: ERC721Proxy
    network: {{network}}
    source: 
      abi: ERC721Proxy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/NFT.ts
      entities:
        - Item
        - Deal
      abis:
        - name: ERC721Proxy
          file: ./abis/ERC721Proxy.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: BaseUriChanged(string)
          handler: handleBaseUriChanged
        - event: CreateERC721Rarible(address,string,string)
          handler: handleCreateERC721Rarible
        - event: CreateERC721RaribleUser(address,string,string)
          handler: handleCreateERC721RaribleUser
        - event: Creators(uint256,(address,uint96)[])
          handler: handle721Creators
        - event: DefaultApproval(indexed address,bool)
          handler: handleDefaultApproval
        - event: MinterStatusChanged(indexed address,indexed bool)
          handler: handleMinterStatusChanged
        - event: RoyaltiesSet(uint256,(address,uint96)[])
          handler: handleRoyaltiesSet
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: ERC1155Proxy
    network: {{network}}
    source: 
      abi: ERC1155Proxy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ./src/mapping/NFT.ts
      entities:
        - Item
        - Deal
      abis:
        - name: ERC1155Proxy
          file: ./abis/ERC1155Proxy.json
      eventHandlers:
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: BaseUriChanged(string)
          handler: handleBaseUriChanged
        - event: CreateERC1155Rarible(address,string,string)
          handler: handleCreateERC1155Rarible
        - event: CreateERC1155RaribleUser(address,string,string)
          handler: handleCreateERC1155RaribleUser
        - event: Creators(uint256,(address,uint96)[])
          handler: handle1155Creators
        - event: DefaultApproval(indexed address,bool)
          handler: handleDefaultApproval
        - event: MinterStatusChanged(indexed address,indexed bool)
          handler: handleMinterStatusChanged
        - event: RoyaltiesSet(uint256,(address,uint96)[])
          handler: handleRoyaltiesSet
        - event: Supply(uint256,uint256)
          handler: handleSupply
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTranferBatch
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: URI(string,indexed uint256)
          handler: handleURI
